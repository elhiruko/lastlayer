// this file will be eventually generated by AWIG feature

module __adder_dpi;

    export "DPI-C" function dpi_read_reg;
    export "DPI-C" function dpi_write_reg;
    export "DPI-C" function dpi_read_mem;
    export "DPI-C" function dpi_write_mem;

    function int dpi_read_a;
        input int sel;
        reg [32-1:0] data;
        begin
            data = 0;
            data[0 +: 8] = __adder.dut.a;
            return data[sel*32 +: 32];
        end
    endfunction

    function void dpi_write_a;
        input int sel;
        input int value;
        reg [32-1:0] data;
        begin
            data[0 +: 8] = __adder.dut.a;
            data[sel*32 +: 32] = value;
            __adder.dut.a = data[0 +: 8];
        end
    endfunction

    function int dpi_read_b;
        input int sel;
        reg [32-1:0] data;
        begin
            data = 0;
            data[0 +: 8] = __adder.dut.b;
            return data[sel*32 +: 32];
        end
    endfunction

    function void dpi_write_b;
        input int sel;
        input int value;
        reg [32-1:0] data;
        begin
            data[0 +: 8] = __adder.dut.b;
            data[sel*32 +: 32] = value;
            __adder.dut.b = data[0 +: 8];
        end
    endfunction

    function int dpi_read_y;
        input int sel;
        reg [32-1:0] data;
        begin
            data = 0;
            data[0 +: 8] = __adder.dut.y;
            return data[sel*32 +: 32];
        end
    endfunction

    function void dpi_write_y;
        input int sel;
        input int value;
        reg [32-1:0] data;
        begin
            data[0 +: 8] = __adder.dut.y;
            data[sel*32 +: 32] = value;
            __adder.dut.y = data[0 +: 8];
        end
    endfunction

    function int dpi_read_reg;
        input int hid;
        input int sel;
        begin
            if (hid == 0) begin
                return dpi_read_a(sel);
            end
            else if (hid == 1) begin
                return dpi_read_b(sel);
            end
            else if (hid == 2) begin
                return dpi_read_y(sel);
            end
            else begin
                $error("[dpi-read-reg] invalid hid");
            end
        end
    endfunction

    function void dpi_write_reg;
        input int hid;
        input int sel;
        input int value;
        begin
            if (hid == 0) begin
                dpi_write_a(sel, value);
            end
            else if (hid == 1) begin
                dpi_write_b(sel, value);
            end
            else if (hid == 2) begin
                dpi_write_y(sel, value);
            end
            else begin
                $error("[dpi-write-reg] invalid hid");
            end
        end
    endfunction

    function int dpi_read_mem;
        input int hid;
        input int addr;
        input int sel;
        begin
            $error("[dpi-read-mem] invalid hid");
        end
    endfunction

    function void dpi_write_mem;
        input int hid;
        input int addr;
        input int sel;
        input int value;
        begin
            $error("[dpi-write-mem] invalid hid");
        end
  endfunction

endmodule
