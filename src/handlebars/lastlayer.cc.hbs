#include "V{{vtop}}.h"
#include "lastlayer.h"

vluint64_t main_time = 0;

#ifdef __cplusplus
extern "C" {
#endif

LastLayerHandle LastLayerAlloc() {
  return new V{{vtop}};
}

void LastLayerReset(LastLayerHandle handle, int cycles) {
  V{{vtop}}* top = static_cast<V{{vtop}}*>(handle);
  top->{{clock}} = 0;
  top->{{reset}} = 1;
  while (!Verilated::gotFinish() && main_time < static_cast<vluint64_t>(cycles)) {
    if (main_time > static_cast<vluint64_t>(cycles)) {
      top->{{reset}} = 0;
    }
    if ((main_time % 10) == 1) {
      top->{{clock}} = 1;
    }
    if ((main_time % 10) == 6) {
      top->{{clock}} = 0;
    }
    top->eval();
    main_time++;
  }
}


void LastLayerRun(LastLayerHandle handle, int cycles) {
  V{{vtop}}* top = static_cast<V{{vtop}}*>(handle);
  if (main_time > 0) {
      main_time = 0; // reset cycle counter
  }
  top->{{clock}} = 0;
  while (!Verilated::gotFinish() && main_time < static_cast<vluint64_t>(cycles)) {
    if ((main_time % 10) == 1) {
      top->{{clock}} = 1;
    }
    if ((main_time % 10) == 6) {
      top->{{clock}} = 0;
    }
    top->eval();
    main_time++;
  }
}

void LastLayerDealloc(LastLayerHandle handle) {
  delete static_cast<V{{vtop}}*>(handle);
}

#ifdef __cplusplus
}
#endif
