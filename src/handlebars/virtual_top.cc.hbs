#include "V{{vtop}}.h"

vluint64_t main_time = 0;

extern "C" {

void* alloc() {
  return new V{{vtop}};
}

void reset(void* handle, int cycles) {
  V{{vtop}}* top = static_cast<V{{vtop}}*>(handle);
  top->{{clock}} = 0;
  top->{{reset}} = 1;
  while (!Verilated::gotFinish() && main_time < static_cast<vluint64_t>(cycles)) {
    if (main_time > static_cast<vluint64_t>(cycles)) {
      top->{{reset}} = 0;
    }
    if ((main_time % 10) == 1) {
      top->{{clock}} = 1;
    }
    if ((main_time % 10) == 6) {
      top->{{clock}} = 0;
    }
    top->eval();
    main_time++;
  }
}


void run(void* handle, int cycles) {
  V{{vtop}}* top = static_cast<V{{vtop}}*>(handle);
  if (main_time > 0) {
      main_time = 0; // start counting cycles after reset
  }
  top->{{clock}} = 0;
  while (!Verilated::gotFinish() && main_time < static_cast<vluint64_t>(cycles)) {
    if ((main_time % 10) == 1) {
      top->{{clock}} = 1;
    }
    if ((main_time % 10) == 6) {
      top->{{clock}} = 0;
    }
    top->eval();
    main_time++;
  }
}

void dealloc(void* handle) {
  delete static_cast<V{{vtop}}*>(handle);
}

}